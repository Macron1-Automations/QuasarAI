name: Run tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password

    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
      PGPASSWORD: password
      PGUSER: rails
      API_KEY: ${{ secrets.API_KEY }}
      FEEDLY_TOKEN: ${{ secrets.FEEDLY_TOKEN }}
      FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
      NEXT_LEG_TOKEN: ${{ secrets.NEXT_LEG_TOKEN }}
      OPENAI_ACCESS_TOKEN: ${{ secrets.OPENAI_ACCESS_TOKEN }}
      OPENAI_ORGANIZATION_ID: ${{ secrets.OPENAI_ORGANIZATION_ID }}
      ORGANIZATION: ${{ secrets.ORGANIZATION }}
      STORYPRO_API_KEY: ${{ secrets.STORYPRO_API_KEY }}
      STORYPRO_API_URL: ${{ secrets.STORYPRO_API_URL }}
      UPLOADCARE_PUBLIC_KEY: ${{ secrets.UPLOADCARE_PUBLIC_KEY }}
      UPLOADCARE_SECRET_KEY: ${{ secrets.UPLOADCARE_SECRET_KEY }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2

      - name: Install dependencies
        run: |
          sudo apt-get -yqq install libpq-dev
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Setup test database
        run: |
          until psql -h localhost -U postgres -c '\q'; do
            echo "Postgres is still unavailable - sleeping"
            sleep 1
          done
          psql -c 'create extension if not exists pgcrypto;' -U rails -d rails_test
          bin/rails db:create
          bin/rails db:schema:load

      - name: Run tests
        run: bundle exec rspec
